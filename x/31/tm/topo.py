# Code generated by o1 and modified by me

import numpy as np
import matplotlib.pyplot as plt

# Define the function f(x,y) = x(1-y) + (1-x)*y + 0.5*x*y
def f(x, y):
    return x*(1 - y) + (1 - x)*y + 0.5*x*y

# Number of points along each axis
N = 200

# Create a grid of x and y values from 0 to 1
x = np.linspace(0, 1, N)
y = np.linspace(0, 1, N)
X, Y = np.meshgrid(x, y)

# Calculate Z = f(X, Y) on the grid
Z = f(X, Y)

# Create the contour (topographical) plot
plt.figure(figsize=(6, 5))

# You can use either contour or contourf.
# contour - draws lines only
# contourf - draws filled contours
contour_plot = plt.contour(X, Y, Z, levels=30, cmap='viridis')
plt.clabel(contour_plot, inline=True, fontsize=8)  # Label contour lines

# If you prefer a filled contour plot, comment out the above two lines
# and uncomment these lines instead:
# contour_filled = plt.contourf(X, Y, Z, levels=15, cmap='viridis')
# plt.colorbar(contour_filled, label='f(x, y)')

# For the contour lines version, add a colorbar like this:
plt.colorbar(contour_plot, label='f(x, y)')

# Label axes and set title
plt.xlabel('prob. missile burns 2 fuel')
plt.ylabel('prob. laser guesses 2 fuel')
plt.title('Prob. the missile wins')

# Show the plot
plt.show()
